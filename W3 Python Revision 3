{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMWyzMkedojfkF+7SqMBH5F"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pk9IWf7hXuc7","executionInfo":{"status":"ok","timestamp":1662594839162,"user_tz":-330,"elapsed":5,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"3e4416b4-5ef6-4f79-bc3f-4bdd83d71673"},"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n","False\n"]}],"source":["print(10 > 9)\n","print(10 == 9)\n","print(10 < 9)"]},{"cell_type":"code","source":["a = 200\n","b = 33\n","\n","if b > a:\n","  print(\"b is greater than a\")\n","else:\n","  print(\"b is not greater than a\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vXucOQxjX8rY","executionInfo":{"status":"ok","timestamp":1662594842251,"user_tz":-330,"elapsed":3,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"13b2d597-1f25-4a6e-d341-709b86d4c689"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["b is not greater than a\n"]}]},{"cell_type":"code","source":["print(bool(\"Hello\"))\n","print(bool(15))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lnFRt-WBX_le","executionInfo":{"status":"ok","timestamp":1662594852422,"user_tz":-330,"elapsed":7,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"6ec1ed03-10ac-4a97-d514-da10ae36d99d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","True\n"]}]},{"cell_type":"code","source":["x = \"Hello\"\n","y = 15\n","\n","print(bool(x))\n","print(bool(y))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZkaBUEBgYCEW","executionInfo":{"status":"ok","timestamp":1662594861375,"user_tz":-330,"elapsed":5,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"84d8a36f-8565-4076-b73d-91fec1d525de"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","True\n"]}]},{"cell_type":"code","source":["print(bool(\"abc\"))\n","print(bool(123))\n","print(bool([\"apple\", \"cherry\", \"banana\"]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"boMgp0W8YEQQ","executionInfo":{"status":"ok","timestamp":1662594935894,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"81948893-dd8d-4dab-97f6-91a1ca4f9c50"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","True\n","True\n"]}]},{"cell_type":"code","source":["print(bool(False))\n","print(bool(None))\n","print(bool(0))\n","print(bool(\"\"))\n","print(bool(()))\n","print(bool([]))\n","print(bool({}))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yvaCdn5LYPeV","executionInfo":{"status":"ok","timestamp":1662595007919,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"df722c47-63cd-459b-e634-8664468539c8"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n","False\n","False\n","False\n","False\n","False\n","False\n"]}]},{"cell_type":"code","source":["\"\"\"One more value, or object in this case, evaluates to False, \n","and that is if you have an object that is made from a class \n","with a __len__ function that returns 0 or False\"\"\"\n","\n","class myclass():\n","  def __len__(self):\n","    return 0\n","\n","myobj = myclass()\n","print(bool(myobj))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OUi83YqyYoCH","executionInfo":{"status":"ok","timestamp":1662595119150,"user_tz":-330,"elapsed":365,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"3eb43ffa-1868-4815-b5be-c428b8bd7eb1"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":[" def myFunction() :\n","  return True\n","\n","myFunction()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pheHq7OrY4DG","executionInfo":{"status":"ok","timestamp":1662595143539,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"0b2e1c9e-8955-49da-cb10-3403555046a5"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["def myFunction() :\n","  return True\n","\n","if myFunction():\n","  print(\"YES!\")\n","else:\n","  print(\"NO!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aMdNoTDVZJJu","executionInfo":{"status":"ok","timestamp":1662595163748,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"7f1c54be-dce6-4676-896f-a6d45e7c0825"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["YES!\n"]}]},{"cell_type":"code","source":["x = 200\n","print(isinstance(x, int))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"byT0zCPoZOEu","executionInfo":{"status":"ok","timestamp":1662595173120,"user_tz":-330,"elapsed":3,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"20942db8-e454-426f-d583-0df1bce9acd7"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"code","source":["isinstance(x, float)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k7zqLuRwZQXV","executionInfo":{"status":"ok","timestamp":1662595280901,"user_tz":-330,"elapsed":3,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"11d6f98d-ef52-47da-9520-61d4f0af0f25"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["###Python divides the operators in the following groups:\n","\n","* Arithmetic operators\n","* Assignment operators\n","* Comparison operators\n","* Logical operators\n","* Identity operators\n","* Membership operators\n","* Bitwise operators\n","\n"],"metadata":{"id":"qYmsm_t5Zxzf"}},{"cell_type":"code","source":["#arithmatic operators\n","\n","\"\"\"\n","+\tAddition\tx + y\t\n","-\tSubtraction\tx - y\t\n","*\tMultiplication\tx * y\t\n","/\tDivision\tx / y\t\n","%\tModulus\tx % y\t\n","**\tExponentiation\tx ** y\t\n","//\tFloor division\tx // y\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"fXCdQ-fHaELv","executionInfo":{"status":"ok","timestamp":1662595648596,"user_tz":-330,"elapsed":7,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"42adab39-a378-4bb3-e2e5-1a73a079d6d4"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n+\\tAddition\\tx + y\\t\\n-\\tSubtraction\\tx - y\\t\\n*\\tMultiplication\\tx * y\\t\\n/\\tDivision\\tx / y\\t\\n%\\tModulus\\tx % y\\t\\n**\\tExponentiation\\tx ** y\\t\\n//\\tFloor division\\tx // y\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["5%2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JI-XWZ0basB8","executionInfo":{"status":"ok","timestamp":1662595570353,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"b4d37d20-b50e-406c-9205-9c201a66ec85"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["5//2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"26ns0uYuaxVu","executionInfo":{"status":"ok","timestamp":1662595576037,"user_tz":-330,"elapsed":371,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"73f09ac9-7587-4b60-dc1e-a85cdb5d291a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["#assignment operators\n","\n","\"\"\"\n","=\tx = 5\tx = 5\t\n","+=\tx += 3\tx = x + 3\t\n","-=\tx -= 3\tx = x - 3\t\n","*=\tx *= 3\tx = x * 3\t\n","/=\tx /= 3\tx = x / 3\t\n","%=\tx %= 3\tx = x % 3\t\n","//=\tx //= 3\tx = x // 3\t\n","**=\tx **= 3\tx = x ** 3\t\n","&=\tx &= 3\tx = x & 3\t\n","|=\tx |= 3\tx = x | 3\t\n","^=\tx ^= 3\tx = x ^ 3\t\n",">>=\tx >>= 3\tx = x >> 3\t\n","<<=\tx <<= 3\tx = x << 3\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":87},"id":"2vp8ZZ-5ayyW","executionInfo":{"status":"ok","timestamp":1662595657671,"user_tz":-330,"elapsed":384,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"26596aab-9568-45ce-ca9b-2e7dcbad929a"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n=\\tx = 5\\tx = 5\\t\\n+=\\tx += 3\\tx = x + 3\\t\\n-=\\tx -= 3\\tx = x - 3\\t\\n*=\\tx *= 3\\tx = x * 3\\t\\n/=\\tx /= 3\\tx = x / 3\\t\\n%=\\tx %= 3\\tx = x % 3\\t\\n//=\\tx //= 3\\tx = x // 3\\t\\n**=\\tx **= 3\\tx = x ** 3\\t\\n&=\\tx &= 3\\tx = x & 3\\t\\n|=\\tx |= 3\\tx = x | 3\\t\\n^=\\tx ^= 3\\tx = x ^ 3\\t\\n>>=\\tx >>= 3\\tx = x >> 3\\t\\n<<=\\tx <<= 3\\tx = x << 3\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["#comparison operators\n","\n","\"\"\"\n","==\tEqual\tx == y\t\n","!=\tNot equal\tx != y\t\n",">\tGreater than\tx > y\t\n","<\tLess than\tx < y\t\n",">=\tGreater than or equal to\tx >= y\t\n","<=\tLess than or equal to\tx <= y\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"3LIRKKlaa4pl","executionInfo":{"status":"ok","timestamp":1662595681180,"user_tz":-330,"elapsed":373,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"c09ab185-0fe8-44f3-90d0-ce0ba24b7e5d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n==\\tEqual\\tx == y\\t\\n!=\\tNot equal\\tx != y\\t\\n>\\tGreater than\\tx > y\\t\\n<\\tLess than\\tx < y\\t\\n>=\\tGreater than or equal to\\tx >= y\\t\\n<=\\tLess than or equal to\\tx <= y\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["#logical operators\n","\n","\"\"\"\n","and \tReturns True if both statements are true\tx < 5 and  x < 10\t\n","or\tReturns True if one of the statements is true\tx < 5 or x < 4\t\n","not\tReverse the result, returns False if the result is true\tnot(x < 5 and x < 10)\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":70},"id":"-v-FDCEabJHu","executionInfo":{"status":"ok","timestamp":1662595719334,"user_tz":-330,"elapsed":6,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"4557fc75-7758-44d8-a23f-dda93ff7b8c1"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nand \\tReturns True if both statements are true\\tx < 5 and  x < 10\\t\\nor\\tReturns True if one of the statements is true\\tx < 5 or x < 4\\t\\nnot\\tReverse the result, returns False if the result is true\\tnot(x < 5 and x < 10)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["#identity operators\n","\n","\"\"\"\n","in \tReturns True if a sequence with the specified value is present in the object\tx in y\t\n","not in\tReturns True if a sequence with the specified value is not present in the object\tx not in y\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"2wuMs5O2bVt-","executionInfo":{"status":"ok","timestamp":1662595747329,"user_tz":-330,"elapsed":6,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"7e6eec5c-aed9-4502-bf09-e9eba7e9944b"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nin \\tReturns True if a sequence with the specified value is present in the object\\tx in y\\t\\nnot in\\tReturns True if a sequence with the specified value is not present in the object\\tx not in y\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["#bitwise operators\n","\n","\"\"\"\n","& \tAND\tSets each bit to 1 if both bits are 1\n","|\tOR\tSets each bit to 1 if one of two bits is 1\n"," ^\tXOR\tSets each bit to 1 if only one of two bits is 1\n","~ \tNOT\tInverts all the bits\n","<<\tZero fill left shift\tShift left by pushing zeros in from the right and let the leftmost bits fall off\n",">>\tSigned right shift\tShift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":105},"id":"lD8PyuKxbcjP","executionInfo":{"status":"ok","timestamp":1662595772235,"user_tz":-330,"elapsed":5,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"aee59ca8-f6cc-4495-a74d-e1647bf3afac"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n& \\tAND\\tSets each bit to 1 if both bits are 1\\n|\\tOR\\tSets each bit to 1 if one of two bits is 1\\n ^\\tXOR\\tSets each bit to 1 if only one of two bits is 1\\n~ \\tNOT\\tInverts all the bits\\n<<\\tZero fill left shift\\tShift left by pushing zeros in from the right and let the leftmost bits fall off\\n>>\\tSigned right shift\\tShift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["True | False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0zEc2FGmbis-","executionInfo":{"status":"ok","timestamp":1662595885759,"user_tz":-330,"elapsed":3,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"406605af-3107-4196-879b-5849245c3b8f"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["True & False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3k9hW5Ahb-Qe","executionInfo":{"status":"ok","timestamp":1662595920518,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"444913e4-575d-4d7f-803a-42f1f071550f"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["True ^ False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_YFE1VDTcB7F","executionInfo":{"status":"ok","timestamp":1662595940729,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"e3872adc-1dc3-4449-ecce-461fee5dbfc9"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["#lists\n","#List items are ordered, changeable, and allow duplicate values."],"metadata":{"id":"VqrElprrcgku","executionInfo":{"status":"ok","timestamp":1662596143736,"user_tz":-330,"elapsed":373,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["mylist = [\"apple\", \"banana\", \"cherry\"]"],"metadata":{"id":"QN3bq5Lfcit-","executionInfo":{"status":"ok","timestamp":1662596145967,"user_tz":-330,"elapsed":4,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["mylist"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LaBRIjZbczxE","executionInfo":{"status":"ok","timestamp":1662596148112,"user_tz":-330,"elapsed":377,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"abe2e18a-a039-457f-9f59-ee018e5f6465"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['apple', 'banana', 'cherry']"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["len(mylist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9ztC-Vfzc-al","executionInfo":{"status":"ok","timestamp":1662596182470,"user_tz":-330,"elapsed":3,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"c81f61c4-bae0-4211-f5da-544494b925db"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["list1 = [\"abc\", 34, True, 40, \"male\"]"],"metadata":{"id":"WL0sjM6udGxd","executionInfo":{"status":"ok","timestamp":1662596234720,"user_tz":-330,"elapsed":5,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["type(mylist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LmmRDMZCdTjM","executionInfo":{"status":"ok","timestamp":1662596245850,"user_tz":-330,"elapsed":3,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}},"outputId":"460a3b3d-5b9a-4821-eb90-3c2df98ab78d"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["list"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["thislist = list((\"apple\", \"banana\", \"cherry\"))"],"metadata":{"id":"pCqZljOJdWX9","executionInfo":{"status":"ok","timestamp":1662596271846,"user_tz":-330,"elapsed":2,"user":{"displayName":"Suminder Singh","userId":"06562668389780877677"}}},"execution_count":41,"outputs":[]},{"cell_type":"markdown","source":["Python Collections (Arrays)\n","There are four collection data types in the Python programming language:\n","\n","\n","\n","*   List is a collection which is ordered and changeable. Allows duplicate members.\n","*   Tuple is a collection which is ordered and unchangeable. Allows duplicate members.\n","*   Set is a collection which is unordered, unchangeable*, and unindexed. No duplicate members.\n","*   Dictionary is a collection which is ordered** and changeable. No duplicate members.\n"],"metadata":{"id":"LZ1nziyvdhxP"}},{"cell_type":"code","source":[],"metadata":{"id":"Znl6lh5Ad3Kf"},"execution_count":null,"outputs":[]}]}